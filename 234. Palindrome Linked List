package LinkList;

public class Solution{
	public boolean isPalindrome(ListNode head) {
		if(head==null||head.next==null)
			return true;
		ListNode fast=head;
		ListNode slow=head;
		while(fast.next!=null && fast.next.next!=null) {
			slow=slow.next;
			fast=fast.next.next;
		}
		ListNode reverseHead=reverseList(slow.next);
		
		while(head!=null && reverseHead!=null) {
			if(head.val!=reverseHead.val)
				return false;
			head=head.next;
			reverseHead=reverseHead.next;
		}
		return true;
	}
	
	public ListNode reverseList(ListNode head) {
		if(head==null||head.next==null)
			return head;
		ListNode p=null;
		ListNode q;
		while(head!=null) {
			q=head.next;
			head.next=p;
			
			p=head;
			head=q;
		}
		return p;
	}
	
	public static void main(String[] args) {
		LinkList l=new LinkList();
		l.addHeadNode(1);
		l.addHeadNode(2);
		//l.addHeadNode(2);
		//l.addHeadNode(1);
		Solution main=new Solution();
		Boolean result=main.isPalindrome(l.head);
		System.out.print(result);
	}
}
